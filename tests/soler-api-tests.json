{
  "info": {
    "name": "Soler API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "HTTP API Tests",
      "item": [
        {
          "name": "Get Transactions - Valid Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"addresses\": [\"9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin\", \"6hQYMUXcYgA2WVdAHQPk2bHRKvNX8jvgk1X9a5ZXG6vR\"]\n}"
            },
            "url": {
              "raw": "http://localhost:8080/transactions",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["transactions"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has transactions array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('transactions');",
                  "    pm.expect(jsonData.transactions).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Transactions have required fields\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.transactions.length > 0) {",
                  "        var firstTx = jsonData.transactions[0];",
                  "        pm.expect(firstTx).to.have.property('signature');",
                  "        pm.expect(firstTx).to.have.property('blockTime');",
                  "        pm.expect(firstTx).to.have.property('slot');",
                  "        pm.expect(firstTx).to.have.property('data');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Transactions - Empty Addresses",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"addresses\": []\n}"
            },
            "url": {
              "raw": "http://localhost:8080/transactions",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["transactions"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Transactions - Invalid Address",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"addresses\": [\"invalid-address\"]\n}"
            },
            "url": {
              "raw": "http://localhost:8080/transactions",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["transactions"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Transactions - Method Not Allowed",
          "request": {
            "method": "GET",
            "url": {
              "raw": "http://localhost:8080/transactions",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["transactions"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 405\", function () {",
                  "    pm.response.to.have.status(405);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Environment Tests",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "http://localhost:8080/health",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// This will fail as the health endpoint doesn't exist yet",
                  "// This is a placeholder for when you add a health check endpoint",
                  "pm.test(\"Health endpoint exists\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
}